allprojects {
    repositories {
        google()
        jcenter()
    }
}

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        // 符号表自动上传
        // classpath 'com.tencent.bugly:symtabfileuploader:2.2.1'
    }
}


apply plugin: 'com.android.application'

dependencies {
    // compile fileTree(dir: 'libs', include: '*.jar')
    implementation fileTree(dir: 'libs', include: '*.jar')
    // 集成Bugly SDK
    // 其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.1.5
    // implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.tencent.bugly:crashreport:3.3.1'
    // 集成Bugly NDK
    // 其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
    // implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.500'

    // https://mvnrepository.com/artifact/com.alibaba/fastjson
    implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.75'

    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    implementation 'com.android.support:multidex:1.0.3'

    implementation 'org.apache.commons:commons-lang3:3.8.1'

    implementation 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
}

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.2"
    compileOptions.encoding = "utf-8"
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        // 项目只包含了 armeabi，在所有Android设备都可以运行
        ndk {
            abiFilters "armeabi"
        }
        // 开启multidex
        multiDexEnabled true
    }

    // android studio导入eclipse项目后报error: file failed to compile.
    // 去掉9.png的合法性检测
    // aaptOptions.cruncherEnabled = false
    // aaptOptions.useNewCruncher = false

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            // so类库文件
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        // instrumentTest 已被弃用，不适用于现在的 gradle 版本
        // instrumentTest.setRoot('tests')
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions {
        //所有正式版构建执行规则生成崩溃的lint检查，如果有崩溃问题将停止构建
        checkReleaseBuilds false
        // 如果为 true，则当lint发现错误时停止 gradle构建
        abortOnError false
    }

}

// 符号表上传
/*apply plugin: 'bugly'
bugly {
    // 注册时分配的App ID
    // appId = '4801ef7d10'
    appId = '3e3568853a'
    // 注册时分配的App Key
    // appKey = '46d25249-d1c1-4daf-b6a5-8806b32ffdb0'
    appKey = '2322394e-3485-4fb3-927d-c6ce568e39cd'
    debug = true
    appPackage = 'com.GlamourPromise.Beauty.Business'
    appVersion = '4.6.015'
    upload = true
    uploadMapping = true
    uploadSymbol = true
//    outputDir='bugly'
    appChannel = 'auto_gradle'
}*/





@{
    List<Model.Table_Model.Service_Model> ServiceList = new List<Model.Table_Model.Service_Model>();
    ServiceList = ViewBag.ServiceList;

    List<Model.View_Model.CategoryList_Model> listCategoryList = new List<Model.View_Model.CategoryList_Model>();
    listCategoryList = ViewBag.CategoryList;

    int categoryID = ViewBag.CategoryID;
}

<div class="page-container">
    <!-- Page Sidebar -->
    @Html.Partial("Sidebar", 20)
    <div class="page-content">
        <!-- Page 面包屑 -->
        <div class="page-breadcrumbs">
            <ul class="breadcrumb">
                <li>
                    <i class="fa fa-home"></i>
                    <a href="/Home/Index">首页</a>
                </li>
                <li><a href="/Service/GetServiceList?b=-1&c=-1">服务</a></li>
                <li>修改服务排序</li>
            </ul>
        </div>
        <!-- /Page 面包屑 -->
        <!-- Page Header -->
        <div class="page-header position-relative">
            <div class="header-title">
                <h1>修改服务排序</h1>
            </div>
            <!--Header Buttons-->
            <div class="header-buttons">
                <a class="sidebar-toggler" href="#">
                    <i class="fa fa-arrows-h"></i>
                </a>
                <a class="refresh" id="refresh-toggler" href="">
                    <i class="glyphicon glyphicon-refresh"></i>
                </a>
                <a class="fullscreen" id="fullscreen-toggler" href="#">
                    <i class="glyphicon glyphicon-fullscreen"></i>
                </a>
            </div>
            <!--Header Buttons End-->
        </div>
        <!-- /Page Header -->

        <!-- Page Body -->
        <div class="page-body">
            <div class="navbar-form">
                <div style="width: 40%;">
                    <select id="seCal" onchange="selectServiceSort()">
                        @{
                            if (listCategoryList != null && listCategoryList.Count > 0)
                            {
                                for (int i = 0; i < listCategoryList.Count; i++)
                                {
                                    if (listCategoryList[i].CategoryID == categoryID)
                                    {
                            <option value="@(listCategoryList[i].CategoryID)" selected="selected">@(listCategoryList[i].CategoryName)(@(listCategoryList[i].ProductCount)) </option>
                                    }
                                    else
                                    {
                            <option value="@(listCategoryList[i].CategoryID)">@(listCategoryList[i].CategoryName)(@(listCategoryList[i].ProductCount)) </option>
                                    }
                                }
                            }
                        }
                    </select>
                </div>
            </div>

            <div class="widget">
                <div class="widget-body">
                    <table class="table table-hover table-striped">
                        <colgroup class="row">
                            <col class="col-xs-1">
                            <col class="col-xs-7">
                            <col class="col-xs-4 ">
                        </colgroup>
                        <thead>
                            <tr>
                                <th>编号</th>
                                <th>服务信息</th>
                                <th>原价格</th>
                            </tr>
                        </thead>
                        <tbody id="foo">
                            @{
                                string oldSortID = "";
                                if (ServiceList != null && ServiceList.Count > 0)
                                {
                                    for (int i = 0; i < ServiceList.Count; i++)
                                    {
                                        oldSortID += ServiceList[i].Sortid + ",";
                                <tr>
                                    <td>@(i + 1)</td>
                                    @*<td>@(ServiceList[i].Sortid)</td>*@
                                    <td class="over-text col-xs-12">@(ServiceList[i].ServiceName)
                                        
                                        <input type="hidden" id="hidserviceCode" value="@(ServiceList[i].ServiceCode)">
                                    </td>
                                    <td>定价:@(ServiceList[i].UnitPrice.ToString("0.00"))元
                                    </td>
                                </tr>
                                    }


                                }
                            }
                            <input type="hidden" id="hidoldSortID" value="@(oldSortID)">
                        </tbody>
                    </table>
                    <br>
                    <div class="col-sm-12 no-padding-left">
                        <button type="submit" class="btn btn-primary" onclick="UpdateServiceSort()">确 定</button>
                        <a href="/Service/GetServiceList?b=-1&c=-1" class="btn btn-default"> 返 回 </a>
                    </div>
                    <br>
                    <br>
                </div>
            </div>

        </div>
        <!-- /Page Body -->

    </div>
</div>
<script src="/Script/Service.js"></script>
<!--排序脚本开始-->
<script src="/assets/js/sortable.js"></script>
<script>
    (function () {
        var console = window.console;

        if (!console.log) {
            console.log = function () {
                alert([].join.apply(arguments, ' '));
            };
        }
        window.x = new Sortable(foo, {
            group: "words",
            //store: {
            //    get: function (sortable) {
            //        var order = localStorage.getItem(sortable.options.group);
            //        return order ? order.split('|') : [];
            //    },
            //    set: function (sortable) {
            //        var order = sortable.toArray();
            //        localStorage.setItem(sortable.options.group, order.join('|'));
            //    }
            //},
            //onAdd: function (evt) { console.log('onAdd.foo:', evt.item); },
            //onUpdate: function (evt) { console.log('onUpdate.foo:', evt.item); },
            //onRemove: function (evt) { console.log('onRemove.foo:', evt.item); },
            //onStart: function (evt) { console.log('onStart.foo:', evt.item); },
            //onEnd: function (evt) { console.log('onEnd.foo:', evt.item); }
        });


        //[].forEach.call(multi.getElementsByClassName('tile__list'), function (el) {
        //    new Sortable(el, { group: 'photo' });
        //});
    })();
</script>
